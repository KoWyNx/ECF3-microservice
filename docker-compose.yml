services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:6.2
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authentication Service
  authentication-service:
    build:
      context: ./server/authentication-service
    container_name: authentication-service
    environment:
      SERVER_PORT: ${AUTHENTICATION_SERVICE_PORT}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_SCHEMA}?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
      SPRING_PROFILES_ACTIVE: ${ACTIVE_PROFILE}
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network

  # Common Data Service
  common-data-service:
    build:
      context: ./server/common-data-service
    container_name: common-data-service
    environment:
      SERVER_PORT: ${COMMON_DATA_SERVICE_PORT}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_SCHEMA}?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
      SPRING_PROFILES_ACTIVE: ${ACTIVE_PROFILE}
      # Ajout des variables manquantes
      PORT: ${COMMON_DATA_SERVICE_PORT}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_SCHEMA: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ACTIVE_PROFILE: dev
    ports:
      - "${COMMON_DATA_SERVICE_PORT}:${COMMON_DATA_SERVICE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ecommerce-network

  # Payment Service
  payment-service:
    build:
      context: ./server/payment-service
    container_name: payment-service
    environment:
      SERVER_PORT: ${PAYMENT_SERVICE_PORT}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_SCHEMA}?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASS}
      SPRING_PROFILES_ACTIVE: ${ACTIVE_PROFILE}
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce-network

  # Search Suggestion Service (.NET)
  search-suggestion-service:
    build:
      context: ./server/search-suggestion-service/SearchSuggestionService
    container_name: search-suggestion-service
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "${SEARCH_SUGGESTION_SERVICE_PORT}:10000"
    networks:
      - ecommerce-network

  # React Client
  client:
    build:
      context: ./client
      args:
        REACT_APP_AUTHENTICATION_SERVICE_URL: http://localhost:${AUTHENTICATION_SERVICE_PORT}
        REACT_APP_COMMON_DATA_SERVICE_URL: http://localhost:${COMMON_DATA_SERVICE_PORT}
        REACT_APP_PAYMENT_SERVICE_URL: http://localhost:${PAYMENT_SERVICE_PORT}
        REACT_APP_SEARCH_SUGGESTION_SERVICE_URL: http://localhost:${SEARCH_SUGGESTION_SERVICE_PORT}
        REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT}
    container_name: client
    ports:
      - "${REACT_APP_PORT}:3000"
    environment:
      PORT: ${REACT_APP_PORT}
    depends_on:
      - authentication-service
      - common-data-service
      - payment-service
      - search-suggestion-service
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
